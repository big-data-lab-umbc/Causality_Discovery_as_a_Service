{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "location": {
            "defaultValue":"westus2",
            "type": "string"
        },
        "osDiskType": {
            "defaultValue":"Premium_LRS",
            "type": "string"
        },
        "networkSecurityGroups": {
            "defaultValue":[
                {
                    "name": "basicNsgStartlyResource-vnet-nic01",
                    "id": "/subscriptions/250c38e9-47a3-4d89-bc68-54155a7fe08e/resourceGroups/StartlyResource/providers/Microsoft.Network/networkSecurityGroups/basicNsgStartlyResource-vnet-nic01",
                    "rules": [
                        {
                          "name": "sshallow",
                          "properties": {
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "22",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 100,
                            "direction": "Inbound"
                          }
                        }
                    ]
                }
            ],
            "type": "array"
        },
        "networkInterfaceConfigurations": {
            "defaultValue":[
                {
                    "name": "StartlyResource-vnet-nic01",
                    "primary": true,
                    "subnetId": "/subscriptions/250c38e9-47a3-4d89-bc68-54155a7fe08e/resourceGroups/StartlyResource/providers/Microsoft.Network/virtualNetworks/StartlyResource-vnet/subnets/default",
                    "applicationGatewayBackendAddressPools": [],
                    "loadBalancerBackendAddressPools": [],
                    "applicationSecurityGroups": [],
                    "loadBalancerInboundNatPools": [],
                    "enableAcceleratedNetworking": true,
                    "nsgName": "basicNsgStartlyResource-vnet-nic01",
                    "nsgId": "/subscriptions/250c38e9-47a3-4d89-bc68-54155a7fe08e/resourceGroups/StartlyResource/providers/Microsoft.Network/networkSecurityGroups/basicNsgStartlyResource-vnet-nic01",
                    "pipName": "publicIp-StartlyResource-vnet-nic01"
                }
            ],
            "type": "array"
        },
        "virtualMachineScaleSetName": {
            "defaultValue":"CR-VMset",
            "type": "string"
        },
        "singlePlacementGroup": {
            "defaultValue":"false",
            "type": "string"
        },
        "instanceCount": {
            "defaultValue":"1",
            "type": "string"
        },
        "instanceSize": {
            "defaultValue":"Standard_F4s_v2",
            "type": "string"
        },
        "scaleInPolicy": {
            "defaultValue":{
                "rules": [
                    "Default"
                ]
            },
            "type": "object"
        },
        "overprovision": {
            "defaultValue":true,
            "type": "bool"
        },
        "upgradePolicy": {
            "defaultValue":"Manual",
            "type": "string"
        },
        "adminUsername": {
            "defaultValue":"azureuser",
            "type": "string"
        },
        "customData": {
            "type": "string",
            "defaultValue": "#!/bin/bash\ncurl -fsSL https://get.docker.com -o get-docker.sh\nsudo sh get-docker.sh\nsudo service docker start\nsudo usermod -a -G docker azureuser\nsudo chmod 666 /var/run/docker.sock\nsudo apt install unzip\ncurl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash"
        },
        "platformFaultDomainCount": {
            "defaultValue":"5",
            "type": "string"
        }
    },
    "variables": {
        "storageApiVersion": "2019-04-01",
        "virtualMachineScaleSetApiVersion": "2021-03-01",
        "namingInfix": "[toLower(substring(concat(parameters('virtualMachineScaleSetName'), uniqueString(resourceGroup().id)), 0, 9))]"
    },
    "resources": [
        {
            "name": "[parameters('networkSecurityGroups')[copyIndex()].name]",
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2019-02-01",
            "location": "[parameters('location')]",
            "properties": {
                "securityRules": "[parameters('networkSecurityGroups')[copyIndex()].rules]"
            },
            "copy": {
                "name": "networkSecurityGroups",
                "count": "[length(parameters('networkSecurityGroups'))]"
            }
        },
        {
            "name": "[parameters('virtualMachineScaleSetName')]",
            "type": "Microsoft.Compute/virtualMachineScaleSets",
            "apiVersion": "[variables('virtualMachineScaleSetApiVersion')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "networkSecurityGroups"
            ],
            "properties": {
                "singlePlacementGroup": "[parameters('singlePlacementGroup')]",
                "virtualMachineProfile": {
                    "storageProfile": {
                        "osDisk": {
                            "createOption": "fromImage",
                            "caching": "ReadWrite",
                            "managedDisk": {
                                "storageAccountType": "[parameters('osDiskType')]"
                            }
                        },
                        "imageReference": {
                            "publisher": "Canonical",
                            "offer": "UbuntuServer",
                            "sku": "16.04-LTS",
                            "version": "latest"
                        }
                    },
                    "networkProfile": {
                        "copy": [
                            {
                                "name": "networkInterfaceConfigurations",
                                "count": "[length(parameters('networkInterfaceConfigurations'))]",
                                "input": {
                                    "name": "[parameters('networkInterfaceConfigurations')[copyIndex('networkInterfaceConfigurations')].name]",
                                    "properties": {
                                        "primary": "[parameters('networkInterfaceConfigurations')[copyIndex('networkInterfaceConfigurations')].primary]",
                                        "enableAcceleratedNetworking": "[parameters('networkInterfaceConfigurations')[copyIndex('networkInterfaceConfigurations')].enableAcceleratedNetworking]",
                                        "ipConfigurations": [
                                            {
                                                "name": "[concat(take(parameters('networkInterfaceConfigurations')[copyIndex('networkInterfaceConfigurations')].name, sub(80, length('-defaultIpConfiguration'))), '-defaultIpConfiguration')]",
                                                "properties": {
                                                    "subnet": {
                                                        "id": "[parameters('networkInterfaceConfigurations')[copyIndex('networkInterfaceConfigurations')].subnetId]"
                                                    },
                                                    "primary": "[parameters('networkInterfaceConfigurations')[copyIndex('networkInterfaceConfigurations')].primary]",
                                                    "applicationGatewayBackendAddressPools": "[parameters('networkInterfaceConfigurations')[copyIndex('networkInterfaceConfigurations')].applicationGatewayBackendAddressPools]",
                                                    "loadBalancerBackendAddressPools": "[parameters('networkInterfaceConfigurations')[copyIndex('networkInterfaceConfigurations')].loadBalancerBackendAddressPools]",
                                                    "publicIPAddressConfiguration": "[if( equals( parameters('networkInterfaceConfigurations')[copyIndex('networkInterfaceConfigurations')].pipName, ''), json('null'), union(json(concat('{\"name\": \"', parameters('networkInterfaceConfigurations')[copyIndex('networkInterfaceConfigurations')].pipName, '\"}'))\n        ,json('{\"properties\": { \"idleTimeoutInMinutes\": 15}}')))]",
                                                    "loadBalancerInboundNatPools": "[parameters('networkInterfaceConfigurations')[copyIndex('networkInterfaceConfigurations')].loadBalancerInboundNatPools]"
                                                }
                                            }
                                        ],
                                        "networkSecurityGroup": "[if( equals( parameters('networkInterfaceConfigurations')[copyIndex('networkInterfaceConfigurations')].nsgId, ''), json('null'),json(concat('{\"id\": \"', parameters('networkInterfaceConfigurations')[copyIndex('networkInterfaceConfigurations')].nsgId, '\"}')))]"
                                    }
                                }
                            }
                        ]
                    },
                    "extensionProfile": {
                        "extensions": []
                    },
                    "diagnosticsProfile": {
                        "bootDiagnostics": {
                            "enabled": false
                        }
                    },
                    "osProfile": {
                        "computerNamePrefix": "[variables('namingInfix')]",
                        "adminUsername": "[parameters('adminUsername')]",
                        "linuxConfiguration": {
                            "disablePasswordAuthentication": true,
                            "ssh": {
                                "publicKeys": [
                                    {
                                        "path": "[concat('/home/', parameters('adminUsername'), '/.ssh/authorized_keys')]",
                                        "keyData": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDmlROUH2wjVnOw/v9D8bFc8DazEW3LjPWfPQ7IWHiL59rOVb+CZ66Y6l7fG5C8jq/0FuAj1ZaFtcDbWoTnw1ag4q8nN+heQb0BmBC90EwV6Lsvs5QI2HB10uxtZcdGdhBq7YQ+IFUMd8jlCQ+7z9Q5didNGfOsK/puBlcYAyT17XI4Uv4RYnbk27X5kKk8qRHPAleo2XT2oPJDxfrg+2iW5dum3YJvwuzKH4kyKFONWlRRDVugb6FxTMYW4ijvxsW3gmdkz1nNcw9FGuanyB++QPIyEtYitwvdbVemx7blNqayYeBedRnPbHYJMoDjgRTxU8lBHkziaFxRzOnnNRlt starly@starly-Inspiron-3670"
                                    }
                                ]
                            }
                        },
                        "customData": "[base64(parameters('customData'))]"
                    }
                },
                "orchestrationMode": "Uniform",
                "scaleInPolicy": "[parameters('scaleInPolicy')]",
                "overprovision": "[parameters('overprovision')]",
                "upgradePolicy": {
                    "mode": "[parameters('upgradePolicy')]"
                },
                "platformFaultDomainCount": "[parameters('platformFaultDomainCount')]"
            },
            "sku": {
                "name": "[parameters('instanceSize')]",
                "capacity": "[int(parameters('instanceCount'))]"
            }
        }
    ],
    "outputs": {
        "adminUsername": {
            "type": "string",
            "value": "[parameters('adminUsername')]"
        }
    }
}
